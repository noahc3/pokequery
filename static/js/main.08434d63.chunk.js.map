{"version":3,"sources":["SqlApi.js","components/SqlResultTable.js","components/QueryOptionsDropdown.js","components/Q1PokedexLookup.js","App.js","index.js"],"names":["db","init","initSqlite","a","console","warn","sqlPromise","initSqlJs","locateFile","file","dataPromise","fetch","then","res","arrayBuffer","Promise","all","SQL","buf","Database","Uint8Array","error","isReady","execPrepared","query","values","statement","prepare","log","getAsObject","exec","execQuiet","run","SqlResultTable","cols","this","props","rows","className","length","Table","striped","bordered","hover","size","map","name","i","row","value","React","Component","QueryOptionsDropdown","result","sql","state","options","selectedOption","onChange","key","setState","filter","x","Dropdown","Toggle","variant","id","Menu","Item","active","onClick","setValue","eventKey","Q1PokedexLookup","pokedex","table","columns","Button","runQuery","App","window","Navbar","bg","Brand","Container","Tabs","defaultActiveKey","Tab","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08434d63.chunk.js","sourcesContent":["import initSqlJs from \"sql.js\";\n\nlet db;\nlet init = false;\n\nexport async function initSqlite() {\n    if (init) {\n        console.warn(\"Already initialized.\");\n        return;\n    }\n    \n    try {\n        const sqlPromise = initSqlJs({\n            locateFile: file => `https://sql.js.org/dist/${file}`\n        });\n        const dataPromise = fetch(\"/pokequery.sqlite\").then(res => res.arrayBuffer());\n        const [SQL, buf] = await Promise.all([sqlPromise, dataPromise]);\n        db = new SQL.Database(new Uint8Array(buf));\n        init = true;\n    } catch {\n        console.error(\"Failed to load database file.\");\n    }\n}\n\nexport function isReady() {\n    return init;\n}\n\n//Execute a prepared statement\nexport function execPrepared(query, values) {\n    if (!init) return undefined;\n\n    const statement = db.prepare(query);\n    console.log(statement);\n    return statement.getAsObject(values);\n}\n\n//Execute a unprepared query\nexport function exec(query) {\n    if (!init) return undefined;\n\n    return db.exec(query);\n}\n\n//Execute an unprepared query, ignore return value\nexport function execQuiet(query) {\n    if (!init) return undefined;\n\n    db.run(query);\n}","import React from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\n\nexport default class SqlResultTable extends React.Component {\n\n    render() {\n        const cols = this.props.cols;\n        const rows = this.props.rows;\n        return (\n            <div className=\"sql-result-table\">\n                <div><p>Got {rows.length} results.</p></div>\n                <div className=\"limit\">\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                {cols.map((name, i) => (<td key={i}>{name}</td>))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rows.map((row, i) => (\n                                <tr key={i}>\n                                    {row.map((value, i) => (\n                                        <td key={i}>{value}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n            \n        )\n    }\n}","import React from \"react\";\nimport * as sql from \"../SqlApi\";\nimport { Dropdown } from \"react-bootstrap\";\n\nexport default class QueryOptionsDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        const query = this.props.query;\n        const result = sql.exec(query)[0];\n        this.state = {\n            options: result.values,\n            selectedOption: result.values[0][0],\n            onChange: this.props.onChange\n        }\n    }\n\n    setValue(key) {\n        this.setState({selectedOption: key});\n        this.props.onChange(key);\n    }\n\n    render() {\n        const options = this.state.options;\n        const selectedOption = options.filter(x => x[0] === this.state.selectedOption)[0];\n\n        return (\n            <Dropdown className=\"query-dropdown\">\n                <Dropdown.Toggle size=\"sm\" variant=\"success\" id=\"dropdown-basic\">\n                    {selectedOption[1]}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    {options.map((x, i) => (\n                        <Dropdown.Item active={selectedOption[0] === x[0]} onClick={() => {this.setValue(x[0])}} key={i} eventKey={i}>{x[1]}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}","import React from 'react';\nimport * as sql from '../SqlApi';\nimport SqlResultTable from './SqlResultTable';\nimport { Button } from 'react-bootstrap';\nimport QueryOptionsDropdown from './QueryOptionsDropdown';\n\nexport default class Q1PokedexLookup extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pokedex: 1,\n            result: null\n        }\n    }\n\n    runQuery() {\n        console.log(this.state.pokedex);\n        const result = sql.exec(\n            `select distinct pokedex_number \"Dex Number\", name Name, genus Genus, generation_id Gen \n            from pokemon pkmn \n            left outer join pokemon_species ps on pkmn.species_id = ps.id \n            left outer join pokemon_dex_numbers pdn on ps.id = pdn.species_id \n            where pdn.pokedex_id = ${this.state.pokedex} order by \"Dex Number\";`)[0];\n        this.setState({result: result});  \n    }\n\n    render() {\n        const result = this.state.result;\n        const table = result ? (<SqlResultTable rows={result.values} cols={result.columns}/>) : (<div className=\"sql-result-table\"><p>Results will appear here.</p></div>);\n\n        return (\n            <div>\n                <div className='inline-query-span'>\n                    <span>Show all Pokemon in the</span> \n                    <QueryOptionsDropdown \n                        onChange={(x) => {this.setState({pokedex: x})}} \n                        query=\"select id, name from pokedexes;\"/> \n                    <span>Pokedex.</span>\n\n                    <Button size=\"sm\" onClick={() => {this.runQuery()}}>Query</Button>\n                </div>\n                <hr/>\n                {table}\n            </div>\n        );\n    }\n}","import './App.css';\nimport React from 'react';\nimport * as sql from './SqlApi';\nimport Q1PokedexLookup from './components/Q1PokedexLookup';\nimport { Container, Navbar, Tabs, Tab } from 'react-bootstrap';\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            init: false\n        }\n\n        sql.initSqlite().then(() => {\n            window.sql = sql;\n            this.setState({init: true});\n        });\n    }\n\n    \n\n    render() {\n        if (this.state.init) {\n            return (\n                <div>\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand>PokeQuery</Navbar.Brand>\n                    </Navbar>\n                    <Container>\n                        <Tabs defaultActiveKey=\"q1\">\n                            <Tab eventKey=\"q1\" title=\"Pokedex Lookup\">\n                            <Q1PokedexLookup/>\n                            </Tab>\n                            <Tab eventKey=\"q2\" title=\"Profile\">\n                            </Tab>\n                            <Tab eventKey=\"q3\" title=\"Contact\">\n                            </Tab>\n                        </Tabs>\n                    </Container>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <p>Please wait while we load the database...</p>\n                </div>\n            );\n        }\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}